{"name":"Backup","tagline":"Yet another backup tool","body":"backup\r\n======\r\n\r\nCurrent version: v1.1.4\r\n\r\ncollection backup and recovery scripts\r\n\r\n## Features\r\n\r\n* backup files\r\n* backup mysql databases\r\n* backup pgsql databases\r\n* compress archives\r\n* upload archives to webdav storage\r\n\r\n## Tested\r\n\r\n* CentOS 6.6 Server\r\n* Fedora Linux 21 Desktop\r\n* Ubuntu 14.04 LTS Server\r\n\r\n# Install\r\n\r\n`sudo apt-get install gnupg`\r\n\r\n`sudo apt-get install rng-tools`\r\n\r\n`sudo pip install configparser`\r\n\r\n`sudo pip install python-gnupg`\r\n\r\n`sudo pip install easywebdav`\r\n\r\n\r\n## For Postgresql\r\n\r\n`createuser <backup_username>`\r\n\r\n`alter user <backup_username> password '<password>';`\r\n\r\n\r\n`GRANT SELECT ON ALL TABLES IN SCHEMA public TO <backup_usermame>;`\r\n\r\n`GRANT CONNECT ON DATABASE <database_name> to <backup_usermame>;`\r\n\r\n`GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO <backup_usermame>;`\r\n\r\n\r\nfor pg_basebackup (EXPERIMENTAL)\r\n\r\npg_hba.conf\r\n`local   replication     postgres                                md5`\r\n\r\npostgresql.conf\r\n`max_wal_senders = 1`\r\n`wal_level = hot_standby`\r\n\r\n\r\n# Using\r\n\r\n## Examples\r\n\r\nShow help\r\n\r\n`python backup.py --help`\r\n\r\nSpecify config file\r\n\r\n`python backup.py -c config.ini`\r\n\r\nSpecify log file\r\n\r\n`python backup.py -l backup.log`\r\n\r\n# Configuring\r\n\r\n## config file example\r\n\r\n### 'default' section example\r\n\r\n```\r\n[DEFAULT]\r\nInstanceName = WorkPCUbuntuLinux\r\nStorageLocal = /tmp/storage\r\nCompression = yes\r\nCompressionLevel = 9\r\n```\r\n\r\n### example files backup\r\n\r\n```\r\n[File:test]\r\nEnabled = yes\r\nDirectory = /etc\r\nCompression = yes\r\nCompressionLevel = 9\r\nSavedDaily = 7\r\nSavedWeekly = 4\r\nSavedMonthly = 12\r\nRemote = webdav_yandex\r\nSaveLocal = yes\r\n```\r\n\r\n### example mysql database backup\r\n\r\n```\r\n[Database:mysql_testdatabase]\r\nEnabled = yes\r\nEngine = mysql\r\nHost = localhost\r\nUser = root\r\nPassword = rootpassword\r\nDatabase = test_database\r\nCompression = yes\r\nCompressionLevel = 9\r\nSavedDaily = 7\r\nSavedWeekly = 4\r\nSavedMonthly = 12\r\nSaveLocal = no\r\n```\r\n\r\n### example postgresql database backup\r\n\r\n```\r\n[Database:test_pgsql]\r\nEnabled = yes\r\nEngine = pgsql\r\nHost = localhost\r\nUser = backup_user\r\nPassword = BacK8OLpU@r\r\nDatabase = myappdatabase\r\nRemote = webdav_yandex\r\n```\r\n\r\n### example webdav config\r\n\r\n```\r\n[REMOTE:webdav_yandex]\r\nType = webdav\r\nHost = webdav.yandex.ru\r\nPort = 443\r\nProtocol = https\r\nLogin = user\r\nPassword = password\r\n```\r\n\r\n# GPG keys and crypt\r\n\r\n## Prepare GPG keys\r\n\r\n`gpg --gen-key`\r\n\r\nMake few steps and gpg-key will be generated\r\n\r\nIn the next step we need to change trust level for user,\r\n\r\n`gpg --sign-key email@address.com`\r\n\r\nAfter that you fully trust the key.\r\n\r\n### Trusting levels\r\n\r\n    1 = I don't know or won't say\r\n    2 = I do NOT trust\r\n    3 = I trust marginally\r\n    4 = I trust fully\r\n    5 = I trust ultimately\r\n\r\n## Decrypt archive\r\n\r\n`gpg -r email@address.com --decrypt-files WorkPCUbuntuLinux_test_20141107.tar.gpg`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}